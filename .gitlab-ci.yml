# Definition for CI within GitLab
# Note:
#    Prefix any job name with a '.' to disable.
#


# Enable submodules
variables:
  GIT_STRATEGY: clone
  GIT_SUBMODULE_STRATEGY: none


#### Builds ####
build-riscos:
  # Builds using the RISC OS Build service.
  stage: build
  script:
    # Fetch the build client
    - curl -s -L -o riscos-build-online https://github.com/gerph/robuild-client/releases/download/v0.05/riscos-build-online && chmod +x riscos-build-online

    # Zip up the source to send to robuild
    - zip -q9r /tmp/source-archive.zip * .robuild.yaml

    # Send the archive file to build service
    - ./riscos-build-online -i /tmp/source-archive.zip -a off -t 180 -o /tmp/built

    # Rename the file we got
    - |
      if [[ -f VersionNum ]] ; then
          version=$(sed '/MajorVersion / ! d ; s/.*MajorVersion *"\(.*\)"/\1/' VersionNum)
      else
          version=$(git rev-parse --short HEAD)
      fi
      echo "This is version: $version"
      if [ -f /tmp/built,a91 ] ; then
          cp /tmp/built,a91 "BasToTxt-RISCOS-$version.zip"
      else
          echo "No archive was built?"
          exit 1
      fi

  artifacts:
      when: always
      paths:
          - BasToTxt-RISCOS-*.zip

  tags:
    - linux


build-ubuntu:
  # Builds using the RISC OS Build service.
  stage: build
  script:
    # Build bastotxt
    - |
      cd posix
      make
      cd ..

    # Rename the file we got
    - |
      if [[ -f VersionNum ]] ; then
          version=$(sed '/MajorVersion / ! d ; s/.*MajorVersion *"\(.*\)"/\1/' VersionNum)
      else
          version=$(git rev-parse --short HEAD)
      fi
      echo "This is version: $version"
      if [ -f posix/bastotxt ] ; then
          cp posix/bastotxt "bastotxt-ubuntu-$version"
      else
          echo "No binary was built?"
          exit 1
      fi

  artifacts:
      when: always
      paths:
          - bastotxt-ubuntu-*

  tags:
    - linux


#### Stages to execute ####
stages:
  - build
